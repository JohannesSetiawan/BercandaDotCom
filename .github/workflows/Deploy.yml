name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install dependencies and migrate
        run: |
          pip install -r requirements.txt
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          cp .env BercandaDotComApp/.env
          python manage.py makemigrations
          python manage.py migrate

  publish:
    name: Publish to Docker Registry
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_USER }}/${{ secrets.REGISTRY_IMAGE }}:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client
      
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STATIC_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY  }}
          script: |
            sudo docker container rm -f $CONTAINER_NAME || true
            sudo docker image rm -f ${{ secrets.REGISTRY_USER }}/${{ secrets.REGISTRY_IMAGE }}:latest || true
            sudo docker run --name $CONTAINER_NAME -d -p 8000:8000 ${{ secrets.REGISTRY_USER }}/${{ secrets.REGISTRY_IMAGE }}:latest
